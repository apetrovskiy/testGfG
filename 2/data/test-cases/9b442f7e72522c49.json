{
  "uid" : "9b442f7e72522c49",
  "name" : "test_possible_paths[7-edges0-3-queries0-expected_result0]",
  "fullName" : "src.test.java.problems.hard.PossiblePaths.test_possible_paths#test_possible_paths",
  "historyId" : "17bb78368c6ae2fa216fe56b8185d893",
  "time" : {
    "start" : 1618444541709,
    "stop" : 1618444541709,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [1, 3, 4] == [1]\n  Left contains 2 more items, first extra item: 3\n  Use -v to get the full diff",
  "statusTrace" : "n = 7\nedges = [[1, 2, 3], [2, 3, 1], [2, 4, 9], [3, 6, 7], [3, 5, 8], [5, 7, 4]]\nq = 3, queries = [1, 3, 5], expected_result = [1, 3, 4]\n\n    @ pytest.mark.parametrize(\"n,edges,q,queries,expected_result\", test_data)\n    def test_possible_paths(n: int, edges: List[List[int]],\n                            q: int, queries: List[int],\n                            expected_result: List[int]):\n>       assert expected_result == Solution().maximumWeight(n, edges, q, queries)\nE       assert [1, 3, 4] == [1]\nE         Left contains 2 more items, first extra item: 3\nE         Use -v to get the full diff\n\nsrc/test/java/problems/hard/PossiblePaths/test_possible_paths.py:17: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "src.test.java.problems.hard.PossiblePaths"
  }, {
    "name" : "suite",
    "value" : "test_possible_paths"
  }, {
    "name" : "host",
    "value" : "fv-az132-420"
  }, {
    "name" : "thread",
    "value" : "3069-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.problems.hard.PossiblePaths.test_possible_paths"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "edges",
    "value" : "[[1, 2, 3], [2, 3, 1], [2, 4, 9], [3, 6, 7], [3, 5, 8], [5, 7, 4]]"
  }, {
    "name" : "expected_result",
    "value" : "[1, 3, 4]"
  }, {
    "name" : "n",
    "value" : "7"
  }, {
    "name" : "q",
    "value" : "3"
  }, {
    "name" : "queries",
    "value" : "[1, 3, 5]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9b442f7e72522c49.json",
  "parameterValues" : [ "[[1, 2, 3], [2, 3, 1], [2, 4, 9], [3, 6, 7], [3, 5, 8], [5, 7, 4]]", "[1, 3, 4]", "7", "3", "[1, 3, 5]" ]
}